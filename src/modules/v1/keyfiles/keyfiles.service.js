const Keyfile = require("./keyfiles.model");
const KeyfileDAO = require("./keyfilesDAO");
const keyfileDAO = new KeyfileDAO();
const save2db = require('../../../lib/saveToDatabase');
const deleteFromDb = require(`../../../lib/deleteFromDb`);


const serviceName = "Keyfile"


KeyfilesService = {

    /**
     * Inserts a keyfile into the "keyfiles" collection with the following fields: 
     *  
     * @param {*} addressId: The id for the address corresponding to this keyfile
     * @param {*} email: email for the user
     * @param {*} keyfile: keyfile generated by BramblJS 
     * @param {*} date: The date on wwhich the keyfile was created
     * @returns {string}: ID of the new keyfile
     */
    postKeyFile: async function(addressId, email, keyfile, date) {
        keyfile = keyfile || {}
        const keyfileData = new Keyfile({
            address_id: addressId,
            user_id: email,
            keyfile: keyfile,
            lastUpdatedDate: date
        })
        let insertResult = await save2db(keyfileData, {serviceName: serviceName})

        return this.getKeyfileById(insertResult._id)
    },
    
    getKeyfileById: async function(id) {
        try {
            let keyfile = await keyfileDAO.getKeyfileById(id)
            if (!keyfile) {
                return {error: "Not found"}
            }
            let updated_type = keyile.lastUpdatedDate instanceof Date ? "Date" : "other"
            return {keyfile, updated_type}
        } catch (e) {
            console.log(`api, ${e}`)
            return {error: e}
        }
    },

    deleteKeyfile: async function(id, userEmail) {
        try {
            return deleteFromDb(Keyfile, {_user_id: userEmail, _id:id})
        } catch {
            console.error(`Error occurred while deleting user., ${e}`)
            return {error: e}
        }
    }


}