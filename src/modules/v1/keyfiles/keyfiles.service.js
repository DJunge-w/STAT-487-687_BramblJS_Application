const Keyfile = require("./keyfiles.model");
const KeyfileDAO = require("./keyfilesDAO");
const save2db = require('../../../lib/saveToDatabase');
const deleteFromDb = require(`../../../lib/deleteFromDb`);
const mongoose = require('mongoose');


const serviceName = "Keyfile";


class KeyfilesService {

    /**
     * Inserts a keyfile into the "keyfiles" collection with the following fields: 
     *  
     * @param {*} addressId: The id for the address corresponding to this keyfile
     * @param {*} email: email for the user
     * @param {*} keyfile: keyfile generated by BramblJS 
     * @param {*} date: The date on wwhich the keyfile was created
     * @returns {string}: ID of the new keyfile
     */
    static async addKeyfile(args) {
        const session = await mongoose.startSession();
        try {
            // Create Keyfile Model
            const timestamp = new Date();
            const keyfile = args.keyfile || {};
            const keyfileDoc = {
                address_id: args.addressId,
                address: args.address,
                user_id: args.user_id,
                network: args.network,
                keyfile: keyfile,
                dateCreated: timestamp,
                lastUpdated: timestamp
            };

            keyfileDoc.isActive = {
                status: true,
                asOf: timestamp
            };
            
            const KeyfileInstance = new Keyfile(keyfileDoc);
                
            let insertResult = await save2db(KeyfileInstance, {timestamp, serviceName, session});

            return insertResult;
        } catch (err) {
            throw err;
        } finally {
            session.endSession();
        }
    }
    
    static async getKeyfileById(id) {
        try {
            let keyfile = await KeyfileDAO.getKeyfileById(id)
            if (!keyfile) {
                return {error: "Not found"}
            }
            let updated_type = keyile.lastUpdatedDate instanceof Date ? "Date" : "other"
            return {keyfile, updated_type}
        } catch (e) {
            console.log(`api, ${e}`)
            return {error: e}
        }
    }

    static async deleteKeyfile(id, userEmail) {
        try {
            return deleteFromDb(Keyfile, {_user_id: userEmail, _id:id})
        } catch {
            console.error(`Error occurred while deleting user., ${e}`)
            return {error: e}
        }
    }


}

module.exports = KeyfilesService